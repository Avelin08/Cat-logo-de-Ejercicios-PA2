#include <stdio.h>
#define MAX_SENSORES 5

// Definición de estructura para el sensor de freno
struct SensorFreno {
    int id;
    float presion;
    char ubicacion[20];
};

// Función de inicialización de sensores
void inicializarSensores(struct SensorFreno *sensores) {
    for (int i = 0; i < MAX_SENSORES; i++) {
        printf("Ingrese los datos del sensor de freno %d:\n", i + 1);
        printf("ID: ");
        scanf("%d", &sensores[i].id);
        printf("Presión: ");
        scanf("%f", &sensores[i].presion);
        printf("Ubicación: ");
        scanf(" %[^\n]", sensores[i].ubicacion);
    }
}

// Función para imprimir los valores del arreglo de sensores
void imprimirSensores(struct SensorFreno *sensores) {
    for (int i = 0; i < MAX_SENSORES; i++) {
        printf("Sensor de freno ID: %d\n", sensores[i].id);
        printf("Presión del sensor: %.2f\n", sensores[i].presion);
        printf("Ubicación del sensor: %s\n", sensores[i].ubicacion);
        printf("\n");
    }
}

// Función para borrar el arreglo de sensores
void borrarSensores(struct SensorFreno *sensores) {
    for (int i = 0; i < MAX_SENSORES; i++) {
        sensores[i].id = 0;
        sensores[i].presion = 0;
        sensores[i].ubicacion[0] = '\0';
    }
}

int main() {
    struct SensorFreno sensores[MAX_SENSORES];
    int opcion;

    inicializarSensores(sensores);

    do {
        printf("Menú:\n");
        printf("1. Imprimir arreglo de sensores\n");
        printf("2. Borrar arreglo de sensores\n");
        printf("3. Salir\n");
        printf("Ingrese la opción deseada: ");
        scanf("%d", &opcion);

        switch (opcion) {
            case 1:
                imprimirSensores(sensores);
                break;
            case 2:
                borrarSensores(sensores);
                break;
            case 3:
                printf("Saliendo del programa...\n");
                break;
            default:
                printf("Opción no válida. Intente de nuevo.\n");
        }
    } while (opcion != 3);

    return 0;
}
